google.clientId=148463976434-ddr2hhoo2ud4bmlan7o0lavp6a59636d.apps.googleusercontent.com
google.clientSecret=V2B6SCvfTEqJr4Cz5rwnw6Vl
google.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
google.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
#google.redirectUri=http://localhost:8080/oauth2/callback



#security.oauth2.client.clientId=148463976434-ddr2hhoo2ud4bmlan7o0lavp6a59636d.apps.googleusercontent.com
#security.oauth2.client.clientSecret=V2B6SCvfTEqJr4Cz5rwnw6Vl
#security.oauth2.client.client-id=148463976434-ddr2hhoo2ud4bmlan7o0lavp6a59636d.apps.googleusercontent.com
#security.oauth2.client.client-secret=V2B6SCvfTEqJr4Cz5rwnw6Vl

#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.tokenName=oauth_token
#security.oauth2.client.authenticationScheme=query
#security.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=profile email
#
#security.oauth2.resource.userInfoUri=https://www.googleapis.com/userinfo/v2/me
#security.oauth2.resource.preferTokenInfo=false


#H2 Database configuration
#spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.platform=h2
#spring.datasource.initialize=true
spring.jpa.hibernate.ddl-auto=create
# SQL GENERATE CONFIGURATION
#datasource.schema=  the schema sql script to load. By default it is schema-${platform}.sql then schema.sql;
#datasource.data= the data sql script. By default, it is data-${platform}.sql then data.sql;
spring.h2.console.enabled=true

app.jwt.secret=qwerty